git rebase master my_test   # replay my_test(topic) onto the base(master)
git co master; git merge my_test    #fast-fwd of base branch(master)
========================================================
git co my_test
git rebase master       # replay my_test on top of master
#can now do a fast-forward merge of master
========================================================
git reset --hard origin/master
- - - 
**sync up master to origin/master**
git co -b master
git fetch origin
git reset --hard origin/master
- - - 
git br -v
git co -b serverfix origin/serverfix
- - - 
git diff --stat 9c77fd5   #commit summary
- - -
git reset HEAD~     #split apart most recent commit
git reset HEAD^     # RESET COMMIT: undoes the commit and leaves modifies files unstaged:
========================================================
git add -p <filename>  # ADD ONLY (P)ARTS OF A FILE
    y - (y)es, stage hunk
    n - (n)o, don't stage hunk
    s - split into smaller hunks
    e - manually edit hunk
    j - (j)ump to next hunk (going back to this later)
    d - go to next file
========================================================
git co master
git merge hotfix
git rebase --interactive HEAD~3    # REBASE
git cherry-pick <shortSHA> -n      # pull other check-in, but don't commit
git config --global alias.last 'git -1 HEAD'    #git aliases
git checkout -b foo_bar                         #checkout + switch to branch
